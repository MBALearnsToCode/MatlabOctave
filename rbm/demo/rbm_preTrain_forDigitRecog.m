function rbm_preTrain_forDigitRecog(method = 'gradAsc', ...
   numsEpochs = [50 20 10]);

   a4_init;
   
   rbm = class_rbm(300, 256, 'logistic', 'logistic', 1);
      
   trainData = data_sets.training.inputs';
   validData = data_sets.validation.inputs';

   switch (method)
   
      case ('gradAsc')
         rbm = train_gradAsc(rbm, ...
            dataArgs_list = {trainData validData}, ...   
            trainNumsEpochs = numsEpochs, ...
            cd_chainLengths = [1 3 10], ...   
            trainBatchSize = 100, ...
            trainRandShuff = true, ...
            trainGoodnessApproxChunk_numBatches = 5, ...
            validGoodnessCalcInterval_numChunks = 2, ...
            learningRate_init = 3e-1, ...
            momentumRate_init = 9e-1, ...
            nesterovAccGrad = true, ...
            weightRegulArgs_list = {'L2' 1e-3});
   
      case ('rmsProp')
         rbm = train_rmsProp(rbm, ...
            dataArgs_list = {trainData validData}, ...   
            trainNumsEpochs = numsEpochs, ...
            cd_chainLengths = [1 3 10], ...
            trainBatchSize = 100, ...
            trainRandShuff = true, ...
            trainGoodnessApproxChunk_numBatches = 5, ...
            validGoodnessCalcInterval_numChunks = 2, ...
            stepRate_init = 3e-2, ...
            decayRate_init = 9e-1, ...
            momentumRate_init = 9e-1, ...
            nesterovAccGrad = true, ...
            weightRegulArgs_list = {'L2' 1e-3});

      case ('adaDelta')   
         rbm = train_adaDelta(rbm, ...
         dataArgs_list = {trainData validData}, ...   
         trainNumsEpochs = numsEpochs, ...
         cd_chainLengths = [1 3 10], ...
         trainBatchSize = 100, ...
         trainRandShuff = true, ...
         trainGoodnessApproxChunk_numBatches = 1, ...
         validGoodnessCalcInterval_numChunks = 1, ...
         stepRate_init = 1e-2, ...
         decayRate_init = 9e-1, ...
         momentumRate_init = 0, ...
         nesterovAccGrad = true, ...
         offsetTerm = 1e-6, ...
         weightRegulArgs_list = {'L2' 1e-3});
         
   endswitch
   
endfunction