function c = class_rbm(numHid, numVis, ...
   transformFunc_fromHid_toVis = 'logistic', ...
   transformFunc_fromVis_toHid = 'logistic', ...
   visSoftmaxPartitionSize = 1, ...
   displayOverview = false, ...
   initWeights_rand = true, sigma_or_epsilon = 1e-3, ...
   distrib = 'normal')
      
   c.transformFunc_fromHid_toVis = ...
      transformFunc_fromHid_toVis = ...
      convertText_toTransformFunc...
      (transformFunc_fromHid_toVis);
   c.transformFunc_fromVis_toHid = ...
      transformFunc_fromVis_toHid = ...
      convertText_toTransformFunc...
      (transformFunc_fromVis_toHid);
   c.visSoftmaxPartitionSize = ...
      visSoftmaxPartitionSize;
   
   c.numHid = numHid;
   c.numVis = numVis;
   c.addBiasHid = addBiasHid = ...
      transformFunc_fromHid_toVis.addBias;
   c.addBiasVis = addBiasVis = ...
      transformFunc_fromVis_toHid.addBias;
   
   c.weightDimSizes = weightDimSizes = ...
      [(numHid + addBiasHid) (numVis + addBiasVis)];
   c.numWeights = prod(weightDimSizes);
   c.weights = zeros(weightDimSizes);
   
   c = class(c, 'class_rbm');
   
   if (initWeights_rand)   
      c = initWeights(c, sigma_or_epsilon, distrib);
   endif
   
   if (displayOverview)
      overview(c);
   endif
       
endfunction