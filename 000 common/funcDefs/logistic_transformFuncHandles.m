function f = logistic_transformFuncHandles(addBias = true)

   funcType = 'logistic';
   
   func_signal = ...
      @(input_rowMat, biasWeight_Mat) ...
      addBiasElems(input_rowMat, addBias) * biasWeight_Mat;
   
   func_output_effDeriv = ...
      @(signal, returnDeriv = true) ...
      logisticFunc_rowMat(signal, returnDeriv);
   
   func_costOverSignalGrad_thruCostOverOutputGrad = ...
      @(costOverOutputGrad, outputOverSignalDeriv_effForm) ...
      costOverSignalGrad_thruCostOverOutputGrad_rowMat...
      (costOverOutputGrad, funcType, ...
      outputOverSignalDeriv_effForm);
      
   func_costOverInputGrad_thruCostOverSignalGrad = ...
      @(costOverSignalGrad, input_rowMat, biasWeight_Mat) ...
      costOverSignalGrad ...
      * rmBiasElems(biasWeight_Mat, addBias)';

   func_costOverBiasWeightGrad_thruCostOverSignalGrad = ...
      @(costOverSignalGrad, input_rowMat, biasWeight_Mat) ...
      addBiasElems(input_rowMat, addBias)' ...
      * costOverSignalGrad;
   
   f = class_transformFuncHandles(funcType, addBias, ...
      func_signal, func_output_effDeriv, ...
      func_costOverSignalGrad_thruCostOverOutputGrad, ...
      func_costOverInputGrad_thruCostOverSignalGrad, ...
      func_costOverBiasWeightGrad_thruCostOverSignalGrad);
      
endfunction