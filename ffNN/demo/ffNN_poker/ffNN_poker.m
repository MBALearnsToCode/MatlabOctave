function ffNN = ffNN_poker...
   (loadFileName = '', saveFileName = '', ...
   balancedClasses = false, ...
   numHid = 30, numTrainEpochs = 5, ...
   stepRate = 1e-2)
         
   fprintf('\nLoading Data... ');
   data = load('poker.mat').data;
   X = data(:, 1 : 10);   
   y = data(:, 11);   
   numInputs = columns(pokerHands_expand(X(1, :)));
   
   if strcmp(loadFileName, '');
      ffNN = class_ffNN(numInputs, [numHid 10], {});
      ffNN.func_convertInput = @pokerHands_expand;
   else
      ffNN = ffNN_loadFile(loadFileName);
   endif
   if strcmp(saveFileName, '');
      saveFileName = 'ffNN_poker.mat';
   endif
   
   if (balancedClasses)
      classProbties = 1;
   else
      classProbties = [46 37 29 22 16 11 7 4 2 1];
         %[50.1, 42.3, 4.75, 2.11, 0.392, ...
         %0.198, 0.144, 0.0240, 0.00139, 0.000154];
   endif
   
   ffNN = train_rmsProp...
      (ffNN_init___ = ffNN, ...
      dataArgs_list = {X y [0.9 0.1]}, ...
      targetOutputs_areClassIndcsColVecs_ofNumClasses___ = 10, ...
      classSkewnesses___ = classProbties, ...
      trainNumEpochs___ = numTrainEpochs, ...
      trainBatchSize___ = 300, ...
      trainRandShuff___ = true, ...
      trainCostApproxChunk_numBatches___ = 300, ...
      validCostCalcInterval_numChunks___ = 3, ...
      stepRate___ = stepRate, ...
      decayRate___ = 9e-1, momentumRate___ = 9e-1, ...
      nesterovAccGrad = true, ...
      weightRegulArgs___ = {{'L2'} [0]}, ...
      connectProbs___ = [1.0], ...
      bestStop___ = true, ...
      saveFileName___ = saveFileName);
      
endfunction