function [costAvg_inclWeightPenalty weightGrads_colVec] = ...
   costAvgInclWeightPenalty_n_weightGrads...
   (ffNN, weights_colVec = [], input_Arr, ...
   targetOutputs_rowMats_args, ...
   targetOutputs_areClassIndcsColVecs_ofNumClasses = false, ...
   weightRegulArgs_list = {{'L2'} [0]}, ...
   connectivitiesOnOff = {1.0}, returnGrad = false)
   
   if (~isempty(weights_colVec))
      ffNN.weights = convertColVecToArrs...
         (weights_colVec, ffNN.weightDimSizes);
   endif

   if (returnGrad)
      [weightGrads, ~, costAvg_inclWeightPenalty] = ...
         fProp_bProp(ffNN, input_Arr, ...
         targetOutputs_rowMats_args, ...
         targetOutputs_areClassIndcsColVecs_ofNumClasses, ...
         weightRegulArgs_list, true, connectivitiesOnOff);   
      weightGrads_colVec = convertArrsToColVec(weightGrads);
   else
      [~, ~, costAvg_inclWeightPenalty] = ...
         fProp_bProp(ffNN, input_Arr, ...
         targetOutputs_rowMats_args, ...
         targetOutputs_areClassIndcsColVecs_ofNumClasses, ...
         weightRegulArgs_list, false, connectivitiesOnOff);
   endif
         
endfunction